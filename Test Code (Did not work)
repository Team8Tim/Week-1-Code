#pragma config(StandardModel, "RVW Buggybot")
//*!!Code automatically generated by 'ROBOTC' configuration wizard               !!*//

/*------------------------------------------------------------------------------------------------
This program will move your robot forward for 2 seconds. At the end of the program, all motors
will shut down automatically and turn off.

ROBOT CONFIGURATION: VEX IQ Clawbot
MOTORS & SENSORS:
[I/O Port]          [Name]              [Type]                			[Location]
Port 1        			leftMotor           VEX IQ Motor		      Left side motor
Port 6       				rightMotor          VEX IQ Motor		      Right side motor (reversed)
------------------------------------------------------------------------------------------------*/

//==========================functions========================
void stopBot(int duration) //function for stopping the bot a duration amount of ms
{
	setMotorSpeed(leftMotor,0); //turn of the left motor
	setMotorSpeed(rightMotor,0); //turn of the right motor
	sleep(duration); //stay off for duration amount of ms
}

void move(int duration,int power) //function for moving the bot  a duration amound of ms
{
	setMotorSpeed(leftMotor,power); //turn the left motor
	setMotorSpeed(rightMotor,power); //turn the right motor
	sleep(duration); //stay off for duration amount of ms
	stopBot(100);
}
//==============================end functions=================================

task main()
{
	//this section of code calibrates the gyro and wheels so that the bot will be able to make a perfect 90 degree turn
	resetGyro(gyroSensor);
	setMotorTarget(leftMotor,-90,127);
	setMotorTarget(rightMotor,90,127);
	waitUntilMotorMoveComplete(rightMotor);
	waitUntilMotorMoveComplete(leftMotor);
	float adjust = getGyroDegreesFloat(gyroSensor);
	adjust = (90 * 45)/adjust;
	setMotorTarget(leftMotor,0,127);
	setMotorTarget(rightMotor,0,127);
	sleep(100000);
	waitUntilMotorMoveComplete(rightMotor);
	waitUntilMotorMoveComplete(leftMotor);
	
	int distances[3]; //this array is used to compare the distances of what is directly in front of it, what is to hte left of it, and what is to the right of it

	while(true) //this section of the code will run forever
	{
		//the code takes the collects the three different distances
		distances[1] = getDistanceValue(distanceMM);
		moveMotorTarget(leftMotor,-adjust,127);
		moveMotorTarget(rightMotor,adjust,127);
		waitUntilMotorMoveComplete(rightMotor);
		waitUntilMotorMoveComplete(leftMotor);
		distances[0] = getDistanceValue(distanceMM);
		moveMotorTarget(leftMotor,adjust,127);
		moveMotorTarget(rightMotor,-adjust,127);
		waitUntilMotorMoveComplete(rightMotor);
		waitUntilMotorMoveComplete(leftMotor);
		moveMotorTarget(leftMotor,adjust,127);
		moveMotorTarget(rightMotor,-adjust,127);
		waitUntilMotorMoveComplete(rightMotor);
		waitUntilMotorMoveComplete(leftMotor);
		distances[2] = getDistanceValue(distanceMM);
		
		if(distances[0] > 300) //if the left of the robot is clear, drive straight and turn left to hug the left wall.
		{
			moveMotorTarget(leftMotor,-adjust,127);
			moveMotorTarget(rightMotor,adjust,127);
			waitUntilMotorMoveComplete(rightMotor);
			waitUntilMotorMoveComplete(leftMotor);
			move(300,127);
			moveMotorTarget(leftMotor,-adjust,127);
			moveMotorTarget(rightMotor,adjust,127);
			waitUntilMotorMoveComplete(rightMotor);
			waitUntilMotorMoveComplete(leftMotor);
			moveMotorTarget(leftMotor,-adjust,127);
			moveMotorTarget(rightMotor,adjust,127);
			waitUntilMotorMoveComplete(rightMotor);
			waitUntilMotorMoveComplete(leftMotor);
			move(300,127);
		}
		else if(distances[1] > 300) //if the front of the robot is clear, but the left is not, drive straight.
		{
			moveMotorTarget(leftMotor,-adjust,127);
			moveMotorTarget(rightMotor,adjust,127);
			waitUntilMotorMoveComplete(rightMotor);
			waitUntilMotorMoveComplete(leftMotor);
			move(300,127);
		}
		else if(distances[2] > 300) //if the left and front of the robot is not clear, but the right is, turn right and move forward.
		{
			moveMotorTarget(leftMotor,adjust,127);
			moveMotorTarget(rightMotor,-adjust,127);
			waitUntilMotorMoveComplete(rightMotor);
			waitUntilMotorMoveComplete(leftMotor);
			move(300,127);
		}
		else //if the direction the robot faces is compeltly blocked, turn right and restart code.
		{
			moveMotorTarget(leftMotor,adjust,127);
			moveMotorTarget(rightMotor,-adjust,127);
			waitUntilMotorMoveComplete(rightMotor);
			waitUntilMotorMoveComplete(leftMotor);
		}
	}
}
